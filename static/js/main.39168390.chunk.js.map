{"version":3,"sources":["InputList.module.css","Card.module.css","Button.module.css","ItemList.module.css","Card.js","Button.js","InputList1.js","InputList2.js","ItemList.js","Compute.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","button","type","onClick","InputList1","itemInputRef","useRef","input","onSubmit","event","preventDefault","enteredItem","current","value","isNaN","alert","onAddItem1","placeholder","ref","required","InputList2","onAddItem2","ItemList","items","data","map","item","index","Compute","useState","selectedOption","setSelectedOption","console","log","onSelect","name","checked","App","itemList1","setItemList1","itemList2","setItemList2","finalList","setFinalList","prevItemsList","parseInt","selectedValue","finalres","Set","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39168390.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputList_input__1eOAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1iZPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2y4po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"ItemList_items__2RuAN\"};","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={`${classes.card} ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={classes.button}\r\n      type={props.type || 'button'}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import { useRef} from 'react';\r\nimport Card from './Card';\r\nimport classes from './InputList.module.css';\r\nimport Button from './Button';\r\n\r\nconst InputList1 = (props) =>{\r\n\tconst itemInputRef = useRef();\r\n\t\r\n\t\r\n\tconst submitHandler = (event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tconst enteredItem = itemInputRef.current.value;\r\n\t\tif(isNaN(enteredItem)){\r\n\t\t\talert('please enter number');\r\n\t\t}\r\n\t\tprops.onAddItem1(enteredItem);\r\n\t\titemInputRef.current.value = '';\r\n\t}\r\n\r\n\treturn(\r\n\t\t\t\r\n\t\t\t<Card className={classes.input}>\r\n\t\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Enter list1 items\"  ref={itemInputRef} required/>\r\n\t\t\t\t<Button type=\"submit\">Add</Button>\r\n\t\t\t\t</form>\t\r\n\t\t\t</Card>\t\t\t\r\n\t\t\t\r\n\t\t)\r\n}\r\n\r\nexport default InputList1;","import { useRef } from 'react';\r\nimport Card from './Card';\r\nimport classes from './InputList.module.css';\r\nimport Button from './Button';\r\n\r\nconst InputList2 = (props) =>{\r\n\tconst itemInputRef = useRef();\r\n\t\r\n\t\r\n\tconst submitHandler = (event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tconst enteredItem = itemInputRef.current.value;\r\n\t\tif(isNaN(enteredItem)){\r\n\t\t\talert('please enter number');\r\n\t\t}\r\n\t\tprops.onAddItem2(enteredItem);\r\n\t\titemInputRef.current.value = '';\r\n\t}\r\n\r\n\treturn(\r\n\t\t\t<Card className={classes.input}>\r\n\t\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Enter list2 items\"  ref={itemInputRef} required/>\r\n\t\t\t\t<Button type=\"submit\">Add</Button>\r\n\t\t\t\t</form>\t\t\t\t\r\n\t\t\t</Card>\r\n\t\t)\r\n}\r\n\r\nexport default InputList2;","import React from 'react';\r\nimport classes from './ItemList.module.css';\r\nimport Card from './Card';\r\n//import classes from './UsersList.module.css';\r\n\r\nconst ItemList = (props) => {\r\n  return (\r\n    <Card className={classes.items}>\r\n    \r\n      {props.data && <ul>\r\n        {props.data.map((item,index) => (\r\n          <li key={index}>\r\n            {item} \r\n          </li>\r\n        ))}\r\n      </ul>}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ItemList;","import { useState } from 'react';\r\nimport Button from './Button';\r\nimport \"./styles.css\";\r\n\r\nconst Compute =( props) => {\r\n\r\n\tconst [selectedOption,setSelectedOption] = useState(\"A&B\");\r\n\r\n\tconst submitHandler = (event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log(selectedOption);\r\n\t\tprops.onSelect(selectedOption);\r\n\t  }\r\n\r\n\treturn (\r\n\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"radio-btn-container\">\r\n\t        \t<div\r\n\t\t          className=\"radio-btn\"\r\n\t\t          onClick={() => {\r\n\t\t            setSelectedOption(\"A\");\r\n\t         \t }}\r\n\t        \t>\r\n\t\t          <input\r\n\t\t            type=\"radio\"\r\n\t\t            value={selectedOption}\r\n\t\t            name=\"list\"\r\n\t\t            checked={selectedOption == \"A\"}\r\n\t\t          /> \r\n\t\t          List A Elements\r\n\t       \t\t</div>\r\n\t\t        <div\r\n\t\t          className=\"radio-btn\"\r\n\t\t          onClick={() => {\r\n\t\t            setSelectedOption(\"B\");\r\n\t\t          }}\r\n\t\t        >\r\n\t\t          <input\r\n\t\t            type=\"radio\"\r\n\t\t            value={selectedOption}\r\n\t\t            name=\"list\"\r\n\t\t            checked={selectedOption == \"B\"}\r\n\t\t          />\r\n\t\t          List B Elements\r\n\t\t        </div>\r\n\t\t        <div\r\n\t\t          className=\"radio-btn\"\r\n\t\t          onClick={() => {\r\n\t\t            setSelectedOption(\"A&B\");\r\n\t\t          }}\r\n\t\t        >\r\n\t\t          <input\r\n\t\t            type=\"radio\"\r\n\t\t            value={selectedOption}\r\n\t\t            name=\"list\"\r\n\t\t            checked={selectedOption == \"A&B\"}\r\n\t\t          />\r\n\t\t          List A & B Elements\r\n\t\t        </div>\r\n\t\t        <div\r\n\t\t          className=\"radio-btn\"\r\n\t\t          onClick={() => {\r\n\t\t            setSelectedOption(\"A&BUnique\");\r\n\t\t          }}\r\n\t\t        >\r\n\t\t          <input\r\n\t\t            type=\"radio\"\r\n\t\t            value={selectedOption}\r\n\t\t            name=\"list\"\r\n\t\t            checked={selectedOption == \"A&BUnique\"}\r\n\t\t          />\r\n\t\t          List A & B  Unique Elements\r\n\t\t        </div>\r\n      \t\t</div>\r\n      \t\t<br/>\r\n\t\t    <Button type=\"submit\">Compute</Button>\r\n\t\t\t</form>\r\n\t\t);\r\n}\r\nexport default Compute;","import {useState} from 'react';\nimport './App.css';\nimport InputList1 from './InputList1';\nimport InputList2 from './InputList2';\nimport ItemList from './ItemList';\nimport Compute from './Compute';\n\nfunction App() {\n  const [itemList1, setItemList1] = useState([]);\n  const [itemList2, setItemList2] = useState([]);\n  const [finalList, setFinalList] = useState([]);\n  const [computeClicked, setComputeClicked] = useState(false);\n\n  const addItemHandler1 = (item) => {\n    \n    setItemList1((prevItemsList) => {\n      return [\n        ...prevItemsList,\n        parseInt(item),\n      ];\n    });\n  };\n\n  const addItemHandler2 = (item) => {\n    \n    setItemList2((prevItemsList) => {\n      return [\n        ...prevItemsList,\n        parseInt(item),\n      ];\n    });\n  };\n\n\n  const clickHandler = (selectedValue) => {\n    var finalres;\n    if(selectedValue === 'A'){\n        finalres = itemList1;\n    }\n    if(selectedValue === 'B'){\n        finalres = itemList2;\n    }\n    if(selectedValue === 'A&B'){\n        finalres = [...itemList1, ...itemList2];\n    }\n    if(selectedValue === 'A&BUnique'){\n        finalres = [...new Set([...itemList1, ...itemList2])];\n    }\n    setFinalList(finalres);\n    console.log(finalres);\n    console.log(finalList);\n\n  }\n  return (\n    <div className=\"App\">\n        <InputList1 onAddItem1={addItemHandler1}/>\n        <InputList2 onAddItem2={addItemHandler2}/>\n        <br/>\n        <Compute onSelect = {clickHandler}/>\n        { (finalList.length != 0) && <ItemList data={finalList} />}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}